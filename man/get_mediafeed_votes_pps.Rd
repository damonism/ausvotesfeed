% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_mediafeed_votes_pps.R,
%   R/mediafeed_functions.R
\name{get_mediafeed_votes_pps}
\alias{get_mediafeed_votes_pps}
\title{Extract votes from the media feed by polling place}
\usage{
get_mediafeed_votes_pps(DivisionID, xml)
}
\arguments{
\item{DivisionID}{A division ID in either character or interger format.}

\item{xml}{A pointer to an XML media feed object.}
}
\value{
a \code{data.frame} with seven columns: \code{DivisionID},
  \code{PollingPlaceID}, \code{CandidateID}, \code{CandidateType},
  \code{Which} and \code{EventIdentifier}.
}
\description{
The philosophy of the \code{get_mediafeed_votes_by_pps} functions is to
correctly (first priority) and relatively quickly (second priority) extract
votes from the media feed by polling place with the minimum amount of
extraneous information required to build a results data set.

Extract the votes by candidate and polling place for a division from the
media feed.
}
\details{
In practice, this means that the outputs of the files contain
\code{PollingPlaceID} and (where necessary) \code{CandidateID}, but do not
contain division or party information. It is expected that you have already
processed the preload (or other complete) files to get this information.

Due to the structure of the media feed XML files, getting some of this
additional information is extremely slow, and is much slower than just
joining on an existing details file.

The functions in this family are:

\itemize{

\item{\code{\link{get_mediafeed_votes_pps_fp}}}{Get first preference votes by polling place}

\item{\code{\link{get_mediafeed_votes_pps_tcp}}}{Get two-candidate preferred votes by polling place}

\item{\code{\link{get_mediafeed_votes_pps_total}}}{Get total votes by polling place}

}

Note: The different vote types are \code{Candidate} (normal candidate votes),
\code{Ghost} (Candidates from previous elections not running in this
election, included for swing purpose), \code{Formal} (total formal votes),
\code{Informal}, \code{TotalVotes} and \code{TCP Votes} (two candidate
preferred votes).
}
\examples{
\dontrun{
library(purrr)
xml <- read_mediafeed_xml(download_mediafeed_file(2022, "Verbose", Archive = FALSE))
map_dfr(get_mediafeed_divisionids(xml), get_mediafeed_votes_pps, xml)
}
}
