% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vtr_functions.R
\name{read_cvs_vtr}
\alias{read_cvs_vtr}
\title{Read VTR CVS file}
\usage{
read_cvs_vtr(filename, ...)
}
\arguments{
\item{filename}{The file name of the CSV file}

\item{...}{Passed to \link{read.csv}}
}
\value{
A \code{data.frame} of the file with two attributes: \code{updated},
  which is the time the file was updated in \code{POSIXct} format, and
  \code{aec.metadata}, which is the full metadata, unformatted.
}
\description{
Read results files in comma separated variable format from the AEC Virtual
Tally Room.
}
\details{
The AEC's Virtual Tally Room files come in both CSV and tab delineated
format, however they have a few quirks that means that sending them straight
to \link{read.csv} will not work.

In particular, they have a single line of text before the CSV file starts
that contains a bit of meta-data about the file. This is particularly useful
when the files are still being updated after an election.

This function reads the CSV file and appends some of the metadata as
attributes to the resulting \code{data.frame}.

Because this function use both \code{\link{read.csv}} and
\code{\link{read.table}} internally, it can also be used on remote files.
Note however that it will have to download them twice, which may be
inefficient.
}
\examples{
url <- "https://results.aec.gov.au/24310/Website/Downloads/GeneralPartyDetailsDownload-24310.csv"
read_cvs_vtr(url)

\dontrun{
read_cvs_vtr("HouseTcpByCandidateByVoteTypeDownload-27966.csv")
}

}
