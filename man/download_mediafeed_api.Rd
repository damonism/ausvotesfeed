% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{download_mediafeed_api}
\alias{download_mediafeed_api}
\title{Download media feed files via the plumber API}
\usage{
download_mediafeed_api(Server, EventIdentifier, Filetype, Archive = TRUE)
}
\arguments{
\item{Server}{The URL of the server, including protocol and port, with no
trailing slash}

\item{EventIdentifier}{AEC event identifier or election year}

\item{Filetype}{One of \code{Light}, \code{Preload} or \code{Verbose}}

\item{Archive}{If \code{TRUE} (default), use the AEC's media feed archive
site, or \code{FALSE} for the live election results}
}
\value{
A string with the full path of the downloaded file.
}
\description{
The AEC media feed is hosted on an anonymous FTP site, which may be blocked
by some firewalls. This function works in conjunction with a \code{plumber}
script, which is included in the \code{inst} directory in this package.
}
\details{
Simply run the include \code{run.R} file in the \code{inst} directory on a
server that can access the media feed FTP server and use the resulting server
address and port with this function to download the latest zipfile of the
appropriate type from the media feed.

The \code{api.R} file in the \code{inst} directory runs
\code{\link{download_mediafeed_file}} with the correct parameters and sends
the resulting file, which is then downloaded by this function.

One of the differences between \code{\link{download_mediafeed_file}} and this
function is that there is no way I know of to get
\code{\link[curl]{curl_download}} to get the correct filename (even though it
is being sent by \code{plumber}), so it is saved with a name generated by
\code{tempfile()} with enough filename mangling to convince
\code{\link{read_mediafeed_xml}} that it is a legitimate file.
}
\examples{
\dontrun{
download_mediafeed_api("http://127.0.0.1:3379", 2022, "Preload", Archive = FALSE)
}
}
